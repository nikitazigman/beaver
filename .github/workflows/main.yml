name: Beaver CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
        with:
          args: check . --config pyproject.toml

  beaver_etl:
    needs: linting
    uses: ./.github/workflows/beaver_etl.yml

  beaver_terminal:
    needs: linting
    uses: ./.github/workflows/beaver_etl.yml

  beaver_linter:
    needs: linting
    uses: ./.github/workflows/beaver_linter.yml

  beaver_api:
    needs: linting
    uses: ./.github/workflows/beaver_api.yml

  beaver_python_dataset:
    needs: linting
    uses: ./.github/workflows/python_dataset.yml

  dataset_changes:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      dataset_changed: ${{ steps.filter.outputs.dataset }}
      type: boolean
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: master
          filters: |
            dataset:
              - 'dataset/**'


  call_etl_workflow:
    needs: [linting, dataset_changes]
    uses: ./.github/workflows/etl_workflow.yml
    with:
      dataset_changed: ${{ needs.dataset_changes.outputs.dataset_changed == 'true' }}
    secrets:
      API_SECRET_TOKEN: ${{ secrets.API_SECRET_TOKEN }}

  cli_changes:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      cli_changed: ${{ steps.filter.outputs.beaver_terminal }}
      type: boolean
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: master
          filters: |
            beaver_terminal:
              - 'frontend/beaver_terminal/**'

  call_cli_workflow:
    needs: [linting, cli_changes]
    uses: ./.github/workflows/cli_workflow.yml
    with:
      cli_changed: ${{ needs.cli_changes.outputs.cli_changed == 'true' }}
    secrets:
      PYPI_SECRET_TOKEN: ${{ secrets.PYPI_SECRET_TOKEN }}
