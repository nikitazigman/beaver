name: Beaver API CI

on:
  workflow_call:
env:
  DEBUG: True
  SECRET_KEY: ${{ vars.SECRET_KEY }}
  ALLOWED_HOSTS: localhost,127.0.0.1
  POSTGRES_DB: beaver_api_db
  POSTGRES_USER: beaver_api
  POSTGRES_PASSWORD: beaver_api
  POSTGRES_HOST: 127.0.0.1
  POSTGRES_PORT: 5432
  REDIS_HOST: 127.0.0.1
  REDIS_PORT: 6379

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U beaver_api"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7.2.3
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install PostgreSQL and Redis Client Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client redis-tools

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry Dependencies
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: backend/apps/beaver_api/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('backend/apps/beaver_api/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          cd backend/apps/beaver_api
          poetry install --no-interaction --no-root

      - name: Install Project
        run: |
          cd backend/apps/beaver_api
          poetry install --no-interaction

      - name: Wait for Services to be Ready
        run: |
          for i in {1..30}; do
            pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER && redis-cli -h $REDIS_HOST -p $REDIS_PORT ping && break
            sleep 1
          done

      - name: Run Tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          env
          cd backend/apps/beaver_api
          source .venv/bin/activate
          pytest -v .
